{"version":3,"sources":["../app/js/ellipsis.js"],"names":[],"mappings":";AAAA,CAAC,GAAG,CAAC,MAAM,EAAE;AACb,GAAG;AACH,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM;AAC7C,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS;AACjD,CAAC,CAAC,CAAC,CAAC,OAAO;AACX,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI;AAC3D,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,KAAK,MAAM,CAAC;AAC5D;AACA;AACA,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG;AACjD,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,QAAQ,IAAI;AACzD;AACA,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI;AACxF,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,GAAG;AACxD,MAAM,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO;AACxB,IAAI,EAAE,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC,QAAQ;AACxB,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC,QAAQ;AACxB,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK;AAClB,CAAC,EAAE;AACH,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC/B;AACA,EAAE;AACF,GAAG;AACH,CAAC,CAAC,CAAC,CAAC,QAAQ;AACZ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM;AAC9D,CAAC,EAAE;AACH,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,GAAG,IAAI,GAAG;AAChC,GAAG;AACH,CAAC,CAAC,CAAC,CAAC,OAAO;AACX,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU;AACpB,CAAC,EAAE;AACH,CAAC,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC;AAC1B,EAAE,EAAE,QAAQ,EAAE;AACd,EAAE,EAAE,OAAO,EAAE;AACb,EAAE,CAAC,QAAQ,EAAE;AACb,EAAE,EAAE,MAAM,EAAE;AACZ,EAAE,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE;AACpD,IAAI,MAAM,CAAC,CAAC;AACZ,MAAM,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;AACpB,MAAM,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,OAAO,EAAE;AACxC,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG;AAC/C,SAAS,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;AACxC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;AACzB,SAAS,EAAE;AACX,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;AACzB,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,YAAY;AACjC,SAAS,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC;AAC7B,SAAS,EAAE;AACX,QAAQ,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC;AAC/B,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO;AACtC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ;AAC3B,SAAS,EAAE;AACX,QAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC5C,UAAU,EAAE,CAAC,CAAC,KAAK,EAAE;AACrB,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE;AACnC,UAAU,CAAC;AACX,UAAU,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxC,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC;AACnC,gBAAgB,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,YAAY,CAAC;AACzD,gBAAgB,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,WAAW,CAAC;AACvD,gBAAgB,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,EAAE;AACrD;AACA,YAAY,EAAE,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE;AACrC,cAAc,MAAM,CAAC;AACrB,YAAY,CAAC;AACb;AACA,YAAY,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AAC5C,YAAY,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;AACzC,YAAY,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;AACrD;AACA,YAAY,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO;AAChC,YAAY,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,YAAY,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;AAC/C,YAAY,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE;AACzC,YAAY,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC;AACpC;AACA,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;AAClD;AACA,YAAY,EAAE,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;AACvD,cAAc,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;AACpD,cAAc,MAAM,CAAC;AACrB,YAAY,CAAC;AACb;AACA,YAAY,KAAK,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;AACzD,cAAc,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG;AACrC,cAAc,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG;AAC/D,cAAc,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC;AACjD,YAAY,CAAC;AACb;AACA,YAAY,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC;AACpD,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;AAClD,UAAU,EAAE,CAAC,GAAG,EAAE;AAClB;AACA,QAAQ,EAAE;AACV,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI;AAClD,SAAS,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ;AAC1D,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM;AACzB,SAAS,EAAE;AACX,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;AACxC,UAAU,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC;AAC9C,UAAU,QAAQ,GAAG;AACrB,QAAQ,EAAE;AACV,QAAQ,GAAG;AACX,SAAS,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK;AACjD,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS;AAC5B,SAAS,EAAE;AACX,QAAQ,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,GAAG;AAC7C,UAAU,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,GAAG;AACjD,QAAQ,EAAE;AACV;AACA,QAAQ,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,QAAQ,EAAE;AACxD,QAAQ,CAAC,KAAK,EAAE,EAAE,GAAG,OAAO,EAAE,CAAC,SAAS,EAAE;AAC1C;AACA,QAAQ,MAAM,GAAG;AACjB;AACA,MAAM,CAAC;AACP,IAAI,EAAE;AACN,EAAE,CAAC;AACH,GAAG","file":"angular-ellipsis.js","sourcesContent":["'use strict';\n/**\n * Remove excess text and add ellipsis symbol\n * to end of text before text overflows container\n * @example\n    // 1. add angular-ellipsis file to your index.html file\n    <script src=\"path/to/angular-ellipsis.min.js.\"></script>\n\n\n    // 2. add module to your existing angular app\n    var myApp = angular.module('myApp', ['sn.ellipsis']);\n\n    // 3. add the sn-ellipsis directive to the element you wish to clip excess text from\n    <p sn-ellipsis style=\"width: 300px; height: 200px;\">\n      Text to be clipped\n    </p>\n * @module   sn.ellipsis\n * @main     sn.ellipsis\n * @author   SOON_\n */\nangular.module('sn.ellipsis', [\n\n])\n/**\n * @constant\n * @property {String} ellipsis : HTML code for ellipsis symbol\n */\n.constant('ellipsis', '&#8230;')\n/**\n * @example\n *  <p sn-ellipsis>Lorem Ipsum<p>\n * @class snEllipsis\n */\n.directive('snEllipsis', [\n  '$document',\n  '$timeout',\n  'ellipsis',\n  '$window',\n  function ($document, $timeout, ellipsis, $window){\n    return {\n      restrict: 'A',\n      link: function ($scope, $element){\n        /**\n         * Store $timeout in variable so we can\n         * easily find it and cancel it.\n         * @type {Object}\n         */\n        var timer = null;\n        /**\n         * @property originalText\n         * @type     {String}\n         */\n        var orginalText = null;\n        /**\n         * Clip text to fit in element\n         * @method clipText\n         */\n        var clipText = function clipText() {\n          if (timer){\n            $timeout.cancel(timer);\n          }\n          timer = $timeout(function () {\n            var text = orginalText,\n                elementHeight = $element[0].offsetHeight,\n                elementWidth = $element[0].offsetWidth,\n                testEl = $element[0].cloneNode(true);\n\n            if (elementHeight === 0){\n              return;\n            }\n\n            testEl.style.maxHeight = 'none';\n            testEl.style.height = 'auto';\n            testEl.style.width = elementWidth + 'px';\n\n            // hide test element\n            testEl.style.opacity = 0;\n            testEl.style.position = 'absolute';\n            testEl.style.left = '-999em';\n            testEl.innerHTML = text;\n\n            $document[0].body.appendChild(testEl);\n\n            if (testEl.offsetHeight <= elementHeight) {\n              $document[0].body.removeChild(testEl);\n              return;\n            }\n\n            while (testEl.offsetHeight > elementHeight) {\n              text = text.split(' ');\n              text = text.splice(0, (text.length-1)).join(' ');\n              testEl.innerHTML = text + ellipsis;\n            }\n\n            $element[0].innerHTML = text + ellipsis;\n            $document[0].body.removeChild(testEl);\n          }, 100);\n\n        };\n        /**\n         * Store orginalText in variable then call\n         * logic to clip text and add ellipsis if required\n         * @method onInit\n         */\n        var onInit = function onInit() {\n          orginalText = $element[0].innerText;\n          clipText();\n        };\n        /**\n         * Remove event handler from resize event\n         * @method onDestroy\n         */\n        var onDestroy = function onDestroy(){\n          angular.element($window).off('resize');\n        };\n\n        angular.element($window).on('resize', clipText);\n        $scope.$on('$destroy', onDestroy);\n\n        onInit();\n\n      }\n    };\n  }\n]);\n"]}